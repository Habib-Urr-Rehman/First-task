# Generated by Django 5.0.6 on 2024-07-19 10:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('about', models.TextField()),
                ('type', models.CharField(choices=[('IT Services', 'IT Services'), ('Software Development', 'Software Development'), ('Hardware Manufacturing', 'Hardware Manufacturing'), ('Networking', 'Networking'), ('Cybersecurity', 'Cybersecurity'), ('Cloud Computing', 'Cloud Computing'), ('Mobiles Phones', 'Mobiles phones')], max_length=50)),
                ('added_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.company')),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentRolesAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_approval', models.BooleanField(default=False)),
                ('reimbursement_approval', models.BooleanField(default=False)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.department')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('about', models.TextField()),
                ('position', models.CharField(choices=[('Manager', 'Manager'), ('Software Developer', 'Software Developer'), ('Project Leader', 'Project Leader'), ('Product Manager', 'Product Manager'), ('Quality Assurance Engineer', 'Quality Assurance Engineer'), ('Frontend Developer', 'Frontend Developer'), ('Backend Developer', 'Backend Developer'), ('Full Stack Developer', 'Full Stack Developer'), ('Security Engineer', 'Security Engineer')], max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.company')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.department')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('Sick', 'Sick'), ('Casual', 'Casual'), ('Earned', 'Earned'), ('Annual', 'Annual'), ('Unpaid', 'Unpaid')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_approved', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.employee')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField()),
                ('performance_score', models.PositiveIntegerField()),
                ('comments', models.TextField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.company')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.project'),
        ),
        migrations.CreateModel(
            name='Reimbursement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Medical', 'Medical'), ('Internet', 'Internet'), ('Travel', 'Travel'), ('Parking', 'Parking'), ('Education', 'Education'), ('Fitness', 'Fitness'), ('Training', 'Training')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('status', models.CharField(max_length=20)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.employee')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.project')),
            ],
        ),
        migrations.CreateModel(
            name='DailyTimeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('hours', models.DecimalField(decimal_places=2, max_digits=4)),
                ('task_type', models.CharField(choices=[('Coding', 'Coding'), ('Training', 'Training'), ('Tutorial', 'Tutorial'), ('Meeting', 'Meeting'), ('Check', 'Check'), ('Code Review', 'Code Review'), ('Team Engagement', 'Team Engagement'), ('Documentation', 'Documentation'), ('Research', 'Research'), ('Design', 'Design'), ('Testing', 'Testing'), ('Debugging', 'Debugging'), ('Planning', 'Planning'), ('Client Communication', 'Client Communication')], max_length=20)),
                ('description', models.TextField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.employee')),
                ('time_tracking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_management.timetracking')),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('participants', models.ManyToManyField(to='employee_management.employee')),
            ],
        ),
    ]
